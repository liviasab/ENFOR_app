#!/usr/bin/env node
// process.on('unhandledRejection', err => {
//   throw err;
// });
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "process", "./scripts/eject-theme", "@clack/prompts", "./scripts/eject-components"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    // import { ejectComponents } from './scripts/eject';
    const process_1 = __importDefault(require("process"));
    const eject_theme_1 = require("./scripts/eject-theme");
    const prompts_1 = require("@clack/prompts");
    const eject_components_1 = require("./scripts/eject-components");
    const args = process_1.default.argv.slice(2);
    const scriptIndex = args.findIndex((x) => x === 'eject-theme');
    const script = scriptIndex === -1 ? args[0] : args[scriptIndex];
    function main() {
        return __awaiter(this, void 0, void 0, function* () {
            (0, prompts_1.intro)(`gluestack-ui-scripts`);
            if (['eject'].includes(script)) {
                // const ejectType = await select({
                //   message: 'What do you want to eject?',
                //   options: [
                //     {
                //       value: 'config',
                //       label: 'Eject Config',
                //       hint: 'This will eject/add the components config inside your app.',
                //     },
                //     {
                //       value: 'design-system',
                //       label: 'Eject Components & Config',
                //       hint: 'This will eject/add the styled components with config inside your app. (This provides maximum customization, Recommended)',
                //     },
                //   ],
                // });
                // if (ejectType == 'config') {
                //   await ejectTheme();
                //   outro(`You're all set!`);
                // } else if (ejectType == 'design-system') {
                yield (0, eject_components_1.ejectComponents)();
                // outro(`You're all set!`);
                // }
                process_1.default.exit(1);
            }
            if (['eject-theme'].includes(script)) {
                // if (ejectType == 'config') {
                yield (0, eject_theme_1.ejectTheme)();
                // outro(`You're all set!`);
                // } else if (ejectType == 'design-system') {
                // await ejectComponents();
                // }
                process_1.default.exit(1);
            }
            else {
                console.log('Unknown script "' + script + '".');
                console.log('Perhaps you need to update gluestack-ui-scripts?');
            }
        });
    }
    main();
});
