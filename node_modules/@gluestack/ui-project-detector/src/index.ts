const fs = require('fs');
const path = require('path');
const os = require('os');

export const projectDetector = async () => {
  const currDir = process.cwd();

  const projectFiles = fs.readdirSync(currDir);
  const parentFiles = fs.readdirSync(path.resolve(currDir, '..'));

  let app: any = { framework: 'Unknown' };

  if (projectFiles.includes('package.json')) {
    const packageJson = require(`${currDir}/package.json`);
    const dependencies = packageJson.dependencies || {};

    if (dependencies.hasOwnProperty('react')) {
      app['framework'] = 'React';

      if (dependencies.hasOwnProperty('expo')) {
        app['framework'] = 'Expo';
      } else if (dependencies.hasOwnProperty('next')) {
        app['framework'] = 'Next';
      } else if (dependencies.hasOwnProperty('react-native')) {
        app['framework'] = 'React Native CLI';
      }
    }
  }

  if (parentFiles.includes('package.json')) {
    const parentPackageJson = require(path.resolve(
      currDir,
      '..',
      'package.json'
    ));
    app['meta'] = {};
    const workspaces = parentPackageJson.workspaces;
    if (workspaces) {
      app['meta']['isWorkspace'] = true;
      app['meta']['workspaces'] = workspaces;
    }
  }

  app['os'] = os.platform();

  return app;
};
